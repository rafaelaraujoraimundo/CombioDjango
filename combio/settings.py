"""
Django settings for combio project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import sys
import os
from decouple import config
from django.contrib.messages import constants as messages
from celery.schedules import crontab

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

#Chave para seguran√ßa de criptgrafia de senhas no modulo de senhas.
CRYPTO_KEY_MODULO = config('CRYPT_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool)

#ALLOWED_HOSTS = ['*']
ALLOWED_HOSTS = ['179.191.91.6', '127.0.0.1', 'localhost', '172.16.0.15', 'chat.combio.com.br','combiochatbot.share.zrok.io']

#CRSF
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
USE_X_FORWARDED_HOST = True
CSRF_TRUSTED_ORIGINS = ['https://combiochatbot.share.zrok.io','http://127.0.0.1:810', 'http://localhost:810', 'http://172.16.0.15:810','http://chat.combio.com.br','http://179.191.91.6:810','http://179.191.91.6:8000','http://172.16.0.15:8000','http://0.0.0.0:8000']
CSRF_COOKIE_SECURE = False
SESSION_COOKIE_SECURE = False
SECURE_SSL_REDIRECT = False

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
INSTALLED_APPS += [
    "widget_tweaks",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "global_permissions",
    "crispy_forms",
    "chartkick.django",
    "chartjs",
    "django_extensions",
    "ninja_extra",
    "django_celery_results",
    "django_celery_beat",
]


INSTALLED_APPS += [
    "administration",
    "menu",
    "dashboard",
    "utils",
    "api_v1",
    "novosProjetos",
    "chatbot",
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'menu.middlewares.VerificarPermissoesMiddleware',
]

ROOT_URLCONF = 'combio.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
            ],
        },
    },
]

WSGI_APPLICATION = 'combio.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
      "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": config("POSTGRESQL_NAME"),
        "USER": config("POSTGRESQL_USER"),
        "PASSWORD": config("POSTGRESQL_PASSWORD"),
        "HOST": config("POSTGRESQL_HOST"),
        "PORT": config("POSTGRESQL_PORT"),
    },
    "dwcombio_db": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": config("MYSQL_NAME"),
        "USER": config("MYSQL_USER"),
        "PASSWORD": config("MYSQL_PASSWORD"),
        "HOST": config("MYSQL_HOST"),
        "PORT": config("MYSQL_PORT"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/


LANGUAGE_CODE = "pt-br"

USE_I18N = True
USE_L10N = True
USE_TZ = True
TIME_ZONE = 'America/Sao_Paulo'

LOGIN_URL = "account_login"
LOGIN_REDIRECT_URL = "index"
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATIC_URL = "/static/"

AUTH_USER_MODEL = "administration.user"
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = "email"
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_VERIFICATION = "none"
SOCIALACCOUNT_AUTO_SIGNUP = True
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

DATABASE_ROUTERS = ['routers.db_routers.dwcombioRouter']

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#Tags para utilizar messages dentro do HTML DJANGO
MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

CELERY_BEAT_SCHEDULE = {
    'get_FluigServer_every_10_minutes_starting_at_5_past_hour': {
        'task': 'api_v1.tasks.get_FluigServer',
        'schedule': crontab(minute='5-59/10'),
    },
    'get_datasets_every_10_minutes_starting_at_5_past_hour': {
        'task': 'api_v1.tasks.get_datasets',
        'schedule': crontab(minute='1-59/10'),
    },
    'get_memory_every_10_minutes_starting_at_0_past_hour': {
        'task': 'api_v1.tasks.get_memory',
        'schedule': crontab(minute='0-59/10'),
    },
}

CELERY_BROKER_URL = 'redis://172.16.0.15:6379'


CELERY_ACCEPT_CONTENT= ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_BACKEND = 'django-db'
CELERY_RESULT_EXTENDED = True
#CELERY_CACHE_BACKEND = 'django-cache'



#EMAIL
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_PORT =  config('EMAIL_PORT', cast=int)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', cast=bool)
EMAIL_HOST_USER = config('EMAIL_HOST_USER') #config('EMAIL_HOST_USER')  # substitua pelo seu e-mail do Gmail
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')  #config('EMAIL_HOST_PASSWORD')   # substitua pela sua senha ou token de app
